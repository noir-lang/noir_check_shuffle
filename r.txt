Compiled ACIR for main (unoptimized):
func 0
current witness index : 26
private parameters indices : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
public parameters indices : []
return value indices : []
INIT (id: 1, len: 5) 
BRILLIG CALL func 0: inputs: [Array([Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(2))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(3))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(4))], q_c: 0 }]), Array([Expression { mul_terms: [], linear_combinations: [(1, Witness(5))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 0 }, Expression { mul_terms: [], linear_combinations: [(1, Witness(9))], q_c: 0 }])], outputs: [Array([Witness(10), Witness(11), Witness(12), Witness(13), Witness(14)])]
EXPR [ (-1, _15) 0 ]
INIT (id: 3, len: 5) 
MEM (id: 3, read at: x10, value: x16) 
EXPR [ (1, _16) 0 ]
EXPR [ (-1, _17) 1 ]
MEM (id: 3, write x17 at: x10) 
MEM (id: 1, read at: x10, value: x18) 
EXPR [ (-1, _0) (1, _18) 0 ]
MEM (id: 3, read at: x11, value: x19) 
EXPR [ (1, _19) 0 ]
MEM (id: 3, write x17 at: x11) 
MEM (id: 1, read at: x11, value: x20) 
EXPR [ (-1, _1) (1, _20) 0 ]
MEM (id: 3, read at: x12, value: x21) 
EXPR [ (1, _21) 0 ]
MEM (id: 3, write x17 at: x12) 
MEM (id: 1, read at: x12, value: x22) 
EXPR [ (-1, _2) (1, _22) 0 ]
MEM (id: 3, read at: x13, value: x23) 
EXPR [ (1, _23) 0 ]
MEM (id: 3, write x17 at: x13) 
MEM (id: 1, read at: x13, value: x24) 
EXPR [ (-1, _3) (1, _24) 0 ]
MEM (id: 3, read at: x14, value: x25) 
EXPR [ (1, _25) 0 ]
MEM (id: 1, read at: x14, value: x26) 
EXPR [ (-1, _4) (1, _26) 0 ]

unconstrained func 0
[Const { destination: MemoryAddress(0), bit_size: 32, value: 2063 }, CalldataCopy { destination_address: MemoryAddress(2048), size: 10, offset: 0 }, Const { destination: MemoryAddress(2), bit_size: 32, value: 2ยนยน }, Const { destination: MemoryAddress(3), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(4), bit_size: 32, value: 2053 }, Const { destination: MemoryAddress(5), bit_size: 32, value: 1 }, Mov { destination: MemoryAddress(6), source: MemoryAddress(2) }, Mov { destination: MemoryAddress(2), source: MemoryAddress(6) }, Mov { destination: MemoryAddress(6), source: MemoryAddress(4) }, Mov { destination: MemoryAddress(4), source: MemoryAddress(6) }, Call { location: 26 }, Const { destination: MemoryAddress(4), bit_size: 32, value: 2058 }, Const { destination: MemoryAddress(5), bit_size: 32, value: 5 }, Const { destination: MemoryAddress(7), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(8), bit_size: 32, value: 0 }, BinaryIntOp { destination: MemoryAddress(9), op: LessThan, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(5) }, Const { destination: MemoryAddress(10), bit_size: 1, value: 1 }, BinaryIntOp { destination: MemoryAddress(9), op: Sub, bit_size: 1, lhs: MemoryAddress(10), rhs: MemoryAddress(9) }, JumpIf { condition: MemoryAddress(9), location: 25 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(2), rhs: MemoryAddress(8) }, Load { destination: MemoryAddress(6), source_pointer: MemoryAddress(10) }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(4), rhs: MemoryAddress(8) }, Store { destination_pointer: MemoryAddress(10), source: MemoryAddress(6) }, BinaryIntOp { destination: MemoryAddress(8), op: Add, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(7) }, Jump { location: 15 }, Stop { return_data_offset: 2058, return_data_size: 5 }, Const { destination: MemoryAddress(7), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(3), op: Add, bit_size: 32, lhs: MemoryAddress(3), rhs: MemoryAddress(7) }, Const { destination: MemoryAddress(7), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(5), op: Add, bit_size: 32, lhs: MemoryAddress(5), rhs: MemoryAddress(7) }, Const { destination: MemoryAddress(8), bit_size: 32, value: 2 }, Mov { destination: MemoryAddress(7), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(8) }, Const { destination: MemoryAddress(10), bit_size: 32, value: 5 }, Mov { destination: MemoryAddress(8), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(10) }, Const { destination: MemoryAddress(9), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(10), bit_size: 32, value: 0 }, Const { destination: MemoryAddress(11), bit_size: 254, value: 0 }, BinaryIntOp { destination: MemoryAddress(12), op: Add, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(10) }, Store { destination_pointer: MemoryAddress(12), source: MemoryAddress(11) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(10), rhs: MemoryAddress(12) }, BinaryIntOp { destination: MemoryAddress(12), op: Add, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(10) }, Store { destination_pointer: MemoryAddress(12), source: MemoryAddress(11) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(10), rhs: MemoryAddress(12) }, BinaryIntOp { destination: MemoryAddress(12), op: Add, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(10) }, Store { destination_pointer: MemoryAddress(12), source: MemoryAddress(11) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(10), rhs: MemoryAddress(12) }, BinaryIntOp { destination: MemoryAddress(12), op: Add, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(10) }, Store { destination_pointer: MemoryAddress(12), source: MemoryAddress(11) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(10), rhs: MemoryAddress(12) }, BinaryIntOp { destination: MemoryAddress(12), op: Add, bit_size: 32, lhs: MemoryAddress(8), rhs: MemoryAddress(10) }, Store { destination_pointer: MemoryAddress(12), source: MemoryAddress(11) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(10), rhs: MemoryAddress(12) }, Store { destination_pointer: MemoryAddress(7), source: MemoryAddress(8) }, Mov { destination: MemoryAddress(10), source: MemoryAddress(7) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(10), op: Add, bit_size: 32, lhs: MemoryAddress(10), rhs: MemoryAddress(12) }, Store { destination_pointer: MemoryAddress(10), source: MemoryAddress(9) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 2 }, Mov { destination: MemoryAddress(10), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(12) }, Const { destination: MemoryAddress(14), bit_size: 32, value: 5 }, Mov { destination: MemoryAddress(12), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(14) }, Const { destination: MemoryAddress(13), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(14), bit_size: 32, value: 0 }, Const { destination: MemoryAddress(15), bit_size: 1, value: 0 }, BinaryIntOp { destination: MemoryAddress(16), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(16), source: MemoryAddress(15) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, BinaryIntOp { destination: MemoryAddress(16), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(16), source: MemoryAddress(15) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, BinaryIntOp { destination: MemoryAddress(16), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(16), source: MemoryAddress(15) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, BinaryIntOp { destination: MemoryAddress(16), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(16), source: MemoryAddress(15) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, BinaryIntOp { destination: MemoryAddress(16), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(16), source: MemoryAddress(15) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, Store { destination_pointer: MemoryAddress(10), source: MemoryAddress(12) }, Mov { destination: MemoryAddress(14), source: MemoryAddress(10) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, Store { destination_pointer: MemoryAddress(14), source: MemoryAddress(13) }, Const { destination: MemoryAddress(14), bit_size: 32, value: 0 }, Mov { destination: MemoryAddress(6), source: MemoryAddress(14) }, Jump { location: 101 }, Const { destination: MemoryAddress(8), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(9), op: LessThan, bit_size: 32, lhs: MemoryAddress(6), rhs: MemoryAddress(8) }, JumpIf { condition: MemoryAddress(9), location: 119 }, Jump { location: 105 }, Load { destination: MemoryAddress(6), source_pointer: MemoryAddress(7) }, Mov { destination: MemoryAddress(9), source: MemoryAddress(7) }, Const { destination: MemoryAddress(10), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(9), op: Add, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(10) }, Load { destination: MemoryAddress(8), source_pointer: MemoryAddress(9) }, Const { destination: MemoryAddress(7), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(3), op: Sub, bit_size: 32, lhs: MemoryAddress(3), rhs: MemoryAddress(7) }, Const { destination: MemoryAddress(3), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(5), op: Sub, bit_size: 32, lhs: MemoryAddress(5), rhs: MemoryAddress(3) }, Mov { destination: MemoryAddress(5), source: MemoryAddress(6) }, Mov { destination: MemoryAddress(4), source: MemoryAddress(8) }, Mov { destination: MemoryAddress(2), source: MemoryAddress(5) }, Mov { destination: MemoryAddress(3), source: MemoryAddress(4) }, Return, Const { destination: MemoryAddress(11), bit_size: 32, value: 1 }, Mov { destination: MemoryAddress(8), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(11) }, Const { destination: MemoryAddress(11), bit_size: 1, value: 0 }, Store { destination_pointer: MemoryAddress(8), source: MemoryAddress(11) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 0 }, Mov { destination: MemoryAddress(9), source: MemoryAddress(12) }, Jump { location: 127 }, Const { destination: MemoryAddress(12), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(11), op: LessThan, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(12) }, JumpIf { condition: MemoryAddress(11), location: 131 }, Jump { location: 255 }, Load { destination: MemoryAddress(11), source_pointer: MemoryAddress(10) }, Mov { destination: MemoryAddress(13), source: MemoryAddress(10) }, Const { destination: MemoryAddress(14), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(13), op: Add, bit_size: 32, lhs: MemoryAddress(13), rhs: MemoryAddress(14) }, Load { destination: MemoryAddress(12), source_pointer: MemoryAddress(13) }, Const { destination: MemoryAddress(14), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(15), op: LessThan, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(14) }, JumpIf { condition: MemoryAddress(15), location: 140 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, BinaryIntOp { destination: MemoryAddress(15), op: Add, bit_size: 32, lhs: MemoryAddress(11), rhs: MemoryAddress(9) }, Load { destination: MemoryAddress(13), source_pointer: MemoryAddress(15) }, Const { destination: MemoryAddress(11), bit_size: 1, value: 1 }, BinaryIntOp { destination: MemoryAddress(12), op: Sub, bit_size: 1, lhs: MemoryAddress(11), rhs: MemoryAddress(13) }, JumpIf { condition: MemoryAddress(12), location: 146 }, Jump { location: 244 }, Const { destination: MemoryAddress(12), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(13), op: LessThan, bit_size: 32, lhs: MemoryAddress(6), rhs: MemoryAddress(12) }, JumpIf { condition: MemoryAddress(13), location: 150 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, BinaryIntOp { destination: MemoryAddress(13), op: Add, bit_size: 32, lhs: MemoryAddress(2), rhs: MemoryAddress(6) }, Load { destination: MemoryAddress(11), source_pointer: MemoryAddress(13) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(14), op: LessThan, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(12) }, JumpIf { condition: MemoryAddress(14), location: 156 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(4), rhs: MemoryAddress(9) }, Load { destination: MemoryAddress(13), source_pointer: MemoryAddress(14) }, BinaryFieldOp { destination: MemoryAddress(14), op: Equals, lhs: MemoryAddress(11), rhs: MemoryAddress(13) }, JumpIf { condition: MemoryAddress(14), location: 161 }, Jump { location: 243 }, Const { destination: MemoryAddress(11), bit_size: 1, value: 1 }, Store { destination_pointer: MemoryAddress(8), source: MemoryAddress(11) }, Load { destination: MemoryAddress(12), source_pointer: MemoryAddress(7) }, Mov { destination: MemoryAddress(14), source: MemoryAddress(7) }, Const { destination: MemoryAddress(15), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(15) }, Load { destination: MemoryAddress(13), source_pointer: MemoryAddress(14) }, Cast { destination: MemoryAddress(14), source: MemoryAddress(9), bit_size: 254 }, Const { destination: MemoryAddress(17), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(18), op: LessThan, bit_size: 32, lhs: MemoryAddress(6), rhs: MemoryAddress(17) }, JumpIf { condition: MemoryAddress(18), location: 173 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, Const { destination: MemoryAddress(18), bit_size: 32, value: 5 }, Const { destination: MemoryAddress(17), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(19), op: Equals, bit_size: 32, lhs: MemoryAddress(13), rhs: MemoryAddress(17) }, JumpIf { condition: MemoryAddress(19), location: 178 }, Jump { location: 180 }, Mov { destination: MemoryAddress(15), source: MemoryAddress(12) }, Jump { location: 195 }, Mov { destination: MemoryAddress(15), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(18) }, Const { destination: MemoryAddress(21), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(22), bit_size: 32, value: 0 }, BinaryIntOp { destination: MemoryAddress(23), op: LessThan, bit_size: 32, lhs: MemoryAddress(22), rhs: MemoryAddress(18) }, Const { destination: MemoryAddress(24), bit_size: 1, value: 1 }, BinaryIntOp { destination: MemoryAddress(23), op: Sub, bit_size: 1, lhs: MemoryAddress(24), rhs: MemoryAddress(23) }, JumpIf { condition: MemoryAddress(23), location: 194 }, BinaryIntOp { destination: MemoryAddress(24), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(22) }, Load { destination: MemoryAddress(20), source_pointer: MemoryAddress(24) }, BinaryIntOp { destination: MemoryAddress(24), op: Add, bit_size: 32, lhs: MemoryAddress(15), rhs: MemoryAddress(22) }, Store { destination_pointer: MemoryAddress(24), source: MemoryAddress(20) }, BinaryIntOp { destination: MemoryAddress(22), op: Add, bit_size: 32, lhs: MemoryAddress(22), rhs: MemoryAddress(21) }, Jump { location: 184 }, Jump { location: 195 }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(20), op: Add, bit_size: 32, lhs: MemoryAddress(15), rhs: MemoryAddress(6) }, Store { destination_pointer: MemoryAddress(20), source: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(7), source: MemoryAddress(15) }, Mov { destination: MemoryAddress(14), source: MemoryAddress(7) }, Const { destination: MemoryAddress(13), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(13) }, Store { destination_pointer: MemoryAddress(14), source: MemoryAddress(16) }, Load { destination: MemoryAddress(16), source_pointer: MemoryAddress(10) }, Mov { destination: MemoryAddress(14), source: MemoryAddress(10) }, Const { destination: MemoryAddress(13), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(13) }, Load { destination: MemoryAddress(15), source_pointer: MemoryAddress(14) }, Const { destination: MemoryAddress(12), bit_size: 32, value: 5 }, BinaryIntOp { destination: MemoryAddress(18), op: LessThan, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(12) }, JumpIf { condition: MemoryAddress(18), location: 212 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, Const { destination: MemoryAddress(18), bit_size: 32, value: 5 }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(19), op: Equals, bit_size: 32, lhs: MemoryAddress(15), rhs: MemoryAddress(12) }, JumpIf { condition: MemoryAddress(19), location: 217 }, Jump { location: 219 }, Mov { destination: MemoryAddress(14), source: MemoryAddress(16) }, Jump { location: 234 }, Mov { destination: MemoryAddress(14), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(18) }, Const { destination: MemoryAddress(21), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(22), bit_size: 32, value: 0 }, BinaryIntOp { destination: MemoryAddress(23), op: LessThan, bit_size: 32, lhs: MemoryAddress(22), rhs: MemoryAddress(18) }, Const { destination: MemoryAddress(24), bit_size: 1, value: 1 }, BinaryIntOp { destination: MemoryAddress(23), op: Sub, bit_size: 1, lhs: MemoryAddress(24), rhs: MemoryAddress(23) }, JumpIf { condition: MemoryAddress(23), location: 233 }, BinaryIntOp { destination: MemoryAddress(24), op: Add, bit_size: 32, lhs: MemoryAddress(16), rhs: MemoryAddress(22) }, Load { destination: MemoryAddress(20), source_pointer: MemoryAddress(24) }, BinaryIntOp { destination: MemoryAddress(24), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(22) }, Store { destination_pointer: MemoryAddress(24), source: MemoryAddress(20) }, BinaryIntOp { destination: MemoryAddress(22), op: Add, bit_size: 32, lhs: MemoryAddress(22), rhs: MemoryAddress(21) }, Jump { location: 223 }, Jump { location: 234 }, Const { destination: MemoryAddress(13), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(20), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(9) }, Store { destination_pointer: MemoryAddress(20), source: MemoryAddress(11) }, Store { destination_pointer: MemoryAddress(10), source: MemoryAddress(14) }, Mov { destination: MemoryAddress(15), source: MemoryAddress(10) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(15), op: Add, bit_size: 32, lhs: MemoryAddress(15), rhs: MemoryAddress(16) }, Store { destination_pointer: MemoryAddress(15), source: MemoryAddress(13) }, Jump { location: 243 }, Jump { location: 244 }, Load { destination: MemoryAddress(11), source_pointer: MemoryAddress(8) }, JumpIf { condition: MemoryAddress(11), location: 254 }, Jump { location: 247 }, Const { destination: MemoryAddress(12), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(11), op: Add, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(12) }, BinaryIntOp { destination: MemoryAddress(13), op: LessThanEquals, bit_size: 32, lhs: MemoryAddress(9), rhs: MemoryAddress(11) }, JumpIf { condition: MemoryAddress(13), location: 252 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, Mov { destination: MemoryAddress(9), source: MemoryAddress(11) }, Jump { location: 127 }, Jump { location: 255 }, Load { destination: MemoryAddress(9), source_pointer: MemoryAddress(8) }, Const { destination: MemoryAddress(11), bit_size: 1, value: 1 }, BinaryIntOp { destination: MemoryAddress(8), op: Equals, bit_size: 1, lhs: MemoryAddress(9), rhs: MemoryAddress(11) }, Const { destination: MemoryAddress(14), bit_size: 32, value: 66 }, Mov { destination: MemoryAddress(12), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(14) }, Const { destination: MemoryAddress(13), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(14), bit_size: 32, value: 0 }, Const { destination: MemoryAddress(15), bit_size: 8, value: 99 }, BinaryIntOp { destination: MemoryAddress(16), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(16), source: MemoryAddress(15) }, Const { destination: MemoryAddress(16), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(16) }, Const { destination: MemoryAddress(16), bit_size: 8, value: 104 }, BinaryIntOp { destination: MemoryAddress(17), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(17), source: MemoryAddress(16) }, Const { destination: MemoryAddress(17), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(17) }, Const { destination: MemoryAddress(17), bit_size: 8, value: 101 }, BinaryIntOp { destination: MemoryAddress(18), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(18), source: MemoryAddress(17) }, Const { destination: MemoryAddress(18), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(18) }, BinaryIntOp { destination: MemoryAddress(18), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(18), source: MemoryAddress(15) }, Const { destination: MemoryAddress(18), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(18) }, Const { destination: MemoryAddress(18), bit_size: 8, value: 107 }, BinaryIntOp { destination: MemoryAddress(19), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(19), source: MemoryAddress(18) }, Const { destination: MemoryAddress(19), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(19) }, Const { destination: MemoryAddress(19), bit_size: 8, value: 95 }, BinaryIntOp { destination: MemoryAddress(20), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(20), source: MemoryAddress(19) }, Const { destination: MemoryAddress(20), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(20) }, Const { destination: MemoryAddress(20), bit_size: 8, value: 115 }, BinaryIntOp { destination: MemoryAddress(21), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(21), source: MemoryAddress(20) }, Const { destination: MemoryAddress(21), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(21) }, BinaryIntOp { destination: MemoryAddress(21), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(21), source: MemoryAddress(16) }, Const { destination: MemoryAddress(21), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(21) }, Const { destination: MemoryAddress(21), bit_size: 8, value: 117 }, BinaryIntOp { destination: MemoryAddress(22), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(22), source: MemoryAddress(21) }, Const { destination: MemoryAddress(22), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(22) }, Const { destination: MemoryAddress(22), bit_size: 8, value: 102 }, BinaryIntOp { destination: MemoryAddress(23), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(23), source: MemoryAddress(22) }, Const { destination: MemoryAddress(23), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(23) }, BinaryIntOp { destination: MemoryAddress(23), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(23), source: MemoryAddress(22) }, Const { destination: MemoryAddress(23), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(23) }, Const { destination: MemoryAddress(23), bit_size: 8, value: 108 }, BinaryIntOp { destination: MemoryAddress(24), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(24), source: MemoryAddress(23) }, Const { destination: MemoryAddress(24), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(24) }, BinaryIntOp { destination: MemoryAddress(24), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(24), source: MemoryAddress(17) }, Const { destination: MemoryAddress(24), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(24) }, Const { destination: MemoryAddress(24), bit_size: 8, value: 44 }, BinaryIntOp { destination: MemoryAddress(25), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(25), source: MemoryAddress(24) }, Const { destination: MemoryAddress(25), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(25) }, Const { destination: MemoryAddress(25), bit_size: 8, value: 2โต }, BinaryIntOp { destination: MemoryAddress(26), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(26), source: MemoryAddress(25) }, Const { destination: MemoryAddress(26), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(26) }, BinaryIntOp { destination: MemoryAddress(26), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(26), source: MemoryAddress(23) }, Const { destination: MemoryAddress(26), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(26) }, BinaryIntOp { destination: MemoryAddress(26), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(26), source: MemoryAddress(16) }, Const { destination: MemoryAddress(26), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(26) }, BinaryIntOp { destination: MemoryAddress(26), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(26), source: MemoryAddress(20) }, Const { destination: MemoryAddress(26), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(26) }, BinaryIntOp { destination: MemoryAddress(26), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(26), source: MemoryAddress(25) }, Const { destination: MemoryAddress(26), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(26) }, Const { destination: MemoryAddress(26), bit_size: 8, value: 97 }, BinaryIntOp { destination: MemoryAddress(27), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(27), source: MemoryAddress(26) }, Const { destination: MemoryAddress(27), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(27) }, Const { destination: MemoryAddress(27), bit_size: 8, value: 110 }, BinaryIntOp { destination: MemoryAddress(28), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(28), source: MemoryAddress(27) }, Const { destination: MemoryAddress(28), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(28) }, Const { destination: MemoryAddress(28), bit_size: 8, value: 100 }, BinaryIntOp { destination: MemoryAddress(29), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(29), source: MemoryAddress(28) }, Const { destination: MemoryAddress(29), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(29) }, BinaryIntOp { destination: MemoryAddress(29), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(29), source: MemoryAddress(25) }, Const { destination: MemoryAddress(29), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(29) }, Const { destination: MemoryAddress(29), bit_size: 8, value: 114 }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(29) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(16) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(20) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(25) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(26) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(29) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(29) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, BinaryIntOp { destination: MemoryAddress(30), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(30), source: MemoryAddress(26) }, Const { destination: MemoryAddress(30), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(30) }, Const { destination: MemoryAddress(30), bit_size: 8, value: 121 }, BinaryIntOp { destination: MemoryAddress(31), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(31), source: MemoryAddress(30) }, Const { destination: MemoryAddress(31), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(31) }, BinaryIntOp { destination: MemoryAddress(31), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(31), source: MemoryAddress(20) }, Const { destination: MemoryAddress(31), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(31) }, BinaryIntOp { destination: MemoryAddress(31), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(31), source: MemoryAddress(25) }, Const { destination: MemoryAddress(31), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(31) }, BinaryIntOp { destination: MemoryAddress(31), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(31), source: MemoryAddress(28) }, Const { destination: MemoryAddress(31), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(31) }, Const { destination: MemoryAddress(31), bit_size: 8, value: 111 }, BinaryIntOp { destination: MemoryAddress(32), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(32), source: MemoryAddress(31) }, Const { destination: MemoryAddress(32), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(32) }, BinaryIntOp { destination: MemoryAddress(32), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(32), source: MemoryAddress(25) }, Const { destination: MemoryAddress(32), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(32) }, BinaryIntOp { destination: MemoryAddress(32), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(32), source: MemoryAddress(27) }, Const { destination: MemoryAddress(32), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(32) }, BinaryIntOp { destination: MemoryAddress(32), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(32), source: MemoryAddress(31) }, Const { destination: MemoryAddress(32), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(32) }, Const { destination: MemoryAddress(32), bit_size: 8, value: 116 }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(32) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(25) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(15) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(31) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(27) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(32) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, BinaryIntOp { destination: MemoryAddress(33), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(33), source: MemoryAddress(26) }, Const { destination: MemoryAddress(33), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(33) }, Const { destination: MemoryAddress(33), bit_size: 8, value: 105 }, BinaryIntOp { destination: MemoryAddress(34), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(34), source: MemoryAddress(33) }, Const { destination: MemoryAddress(34), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(34) }, BinaryIntOp { destination: MemoryAddress(34), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(34), source: MemoryAddress(27) }, Const { destination: MemoryAddress(34), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(34) }, BinaryIntOp { destination: MemoryAddress(34), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(34), source: MemoryAddress(25) }, Const { destination: MemoryAddress(34), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(34) }, BinaryIntOp { destination: MemoryAddress(34), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(34), source: MemoryAddress(17) }, Const { destination: MemoryAddress(34), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(34) }, Const { destination: MemoryAddress(34), bit_size: 8, value: 113 }, BinaryIntOp { destination: MemoryAddress(35), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(35), source: MemoryAddress(34) }, Const { destination: MemoryAddress(35), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(35) }, BinaryIntOp { destination: MemoryAddress(35), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(35), source: MemoryAddress(21) }, Const { destination: MemoryAddress(35), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(35) }, BinaryIntOp { destination: MemoryAddress(35), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(35), source: MemoryAddress(33) }, Const { destination: MemoryAddress(35), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(35) }, Const { destination: MemoryAddress(35), bit_size: 8, value: 118 }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(35) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(26) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(23) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(17) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(27) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(32) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(25) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(35) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(26) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(23) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(21) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(17) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(14) }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(20) }, Const { destination: MemoryAddress(36), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(14), op: Add, bit_size: 32, lhs: MemoryAddress(14), rhs: MemoryAddress(36) }, JumpIf { condition: MemoryAddress(8), location: 573 }, Const { destination: MemoryAddress(36), bit_size: 32, value: 67 }, Mov { destination: MemoryAddress(14), source: MemoryAddress(0) }, BinaryIntOp { destination: MemoryAddress(0), op: Add, bit_size: 32, lhs: MemoryAddress(0), rhs: MemoryAddress(36) }, Mov { destination: MemoryAddress(36), source: MemoryAddress(14) }, Const { destination: MemoryAddress(37), bit_size: 64, value: 0 }, Store { destination_pointer: MemoryAddress(36), source: MemoryAddress(37) }, Const { destination: MemoryAddress(38), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(36), rhs: MemoryAddress(38) }, Const { destination: MemoryAddress(38), bit_size: 32, value: 66 }, Const { destination: MemoryAddress(40), bit_size: 32, value: 1 }, Const { destination: MemoryAddress(41), bit_size: 32, value: 0 }, BinaryIntOp { destination: MemoryAddress(42), op: LessThan, bit_size: 32, lhs: MemoryAddress(41), rhs: MemoryAddress(38) }, Const { destination: MemoryAddress(43), bit_size: 1, value: 1 }, BinaryIntOp { destination: MemoryAddress(42), op: Sub, bit_size: 1, lhs: MemoryAddress(43), rhs: MemoryAddress(42) }, JumpIf { condition: MemoryAddress(42), location: 570 }, BinaryIntOp { destination: MemoryAddress(43), op: Add, bit_size: 32, lhs: MemoryAddress(12), rhs: MemoryAddress(41) }, Load { destination: MemoryAddress(39), source_pointer: MemoryAddress(43) }, BinaryIntOp { destination: MemoryAddress(43), op: Add, bit_size: 32, lhs: MemoryAddress(36), rhs: MemoryAddress(41) }, Store { destination_pointer: MemoryAddress(43), source: MemoryAddress(39) }, BinaryIntOp { destination: MemoryAddress(41), op: Add, bit_size: 32, lhs: MemoryAddress(41), rhs: MemoryAddress(40) }, Jump { location: 560 }, Const { destination: MemoryAddress(38), bit_size: 32, value: 66 }, BinaryIntOp { destination: MemoryAddress(36), op: Add, bit_size: 32, lhs: MemoryAddress(36), rhs: MemoryAddress(38) }, Trap { revert_data: HeapArray { pointer: MemoryAddress(14), size: 67 } }, Const { destination: MemoryAddress(8), bit_size: 32, value: 1 }, BinaryIntOp { destination: MemoryAddress(9), op: Add, bit_size: 32, lhs: MemoryAddress(6), rhs: MemoryAddress(8) }, BinaryIntOp { destination: MemoryAddress(37), op: LessThanEquals, bit_size: 32, lhs: MemoryAddress(6), rhs: MemoryAddress(9) }, JumpIf { condition: MemoryAddress(37), location: 578 }, Trap { revert_data: HeapArray { pointer: MemoryAddress(0), size: 0 } }, Mov { destination: MemoryAddress(6), source: MemoryAddress(9) }, Jump { location: 101 }]

+--------------------+----------+----------------------+--------------+
| Package            | Function | Expression Width     | ACIR Opcodes |
+--------------------+----------+----------------------+--------------+
| noir_check_shuffle | main     | Bounded { width: 4 } | 29           |
+--------------------+----------+----------------------+--------------+
